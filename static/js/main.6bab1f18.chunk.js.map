{"version":3,"sources":["components/TextBar/TextBar.jsx","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/ContorlBar/ControlBar.jsx","App.js","index.js"],"names":["TextBar","senderTodo","useState","textBar","setTextBar","className","onKeyDown","event","key","preventDefault","onChange","target","value","type","placeholder","Todo","item","renameTitle","deleteTodo","checkTodo","title","itemTitle","setItemTitle","isEditing","setIsEditing","cn","completed","onClick","onDoubleClick","TodoList","items","id","htmlFor","map","ControlBar","itemsCount","filterByAll","filterByCompleted","filterByActive","filterType","clearCompleted","App","todos","setTodos","setFilterType","makeTodo","Date","useEffect","console","log","findItem","indexOf","length","filter","todo","filterTodos","newTitle","todoStatus","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bab1f18.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nexport const TextBar = ({ senderTodo }) => {\r\n  const [textBar, setTextBar] = useState('')\r\n\r\n  const handleChange = (event) => {\r\n    setTextBar(event.target.value);\r\n  }\r\n\r\n  const sendValue = (event) => {\r\n    if(event.key === 'Enter') {\r\n      event.preventDefault();\r\n      senderTodo(textBar);\r\n      setTextBar('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>todos</h1>\r\n      <form>\r\n        <input\r\n          onKeyDown={sendValue}\r\n          onChange={handleChange}\r\n          value={textBar}\r\n          type=\"text\"\r\n          className=\"new-todo\"\r\n          placeholder=\"What needs to be done?\"\r\n        />\r\n      </form>\r\n    </header>\r\n  )\r\n}\r\n\r\n\r\n\r\n        ","import React, { useState } from 'react';\r\nimport cn from 'classnames';\r\n\r\nexport const Todo = ({ item, renameTitle, deleteTodo, checkTodo }) => {\r\n  const [itemTitle, setItemTitle] = useState(item.title);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setItemTitle(event.target.value);\r\n  }\r\n\r\n  const saveTitle = (event) => {\r\n    if(event.key === 'Enter') {\r\n      setItemTitle(event.target.value);\r\n      renameTitle(item, itemTitle);\r\n      setIsEditing(!isEditing);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <li className={cn({\r\n      'completed': item.completed,\r\n      'editing': isEditing,\r\n    })}>\r\n      <div className=\"view\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle\"\r\n          onClick={()=>checkTodo(item)}\r\n        />\r\n        <label\r\n          onDoubleClick={()=>setIsEditing(!isEditing)}\r\n        >\r\n          {item.title}\r\n        </label>\r\n        <button\r\n          type=\"button\"\r\n          className=\"destroy\"\r\n          onClick={()=>deleteTodo(item)}\r\n        />\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        className=\"edit\"\r\n        value={itemTitle}\r\n        onChange={titleChangeHandler}\r\n        onKeyDown={saveTitle}\r\n      />\r\n    </li>\r\n  )\r\n}","import React from 'react';\r\nimport { Todo } from '../Todo';\r\n\r\nexport const TodoList = ({ items, renameTitle, deleteTodo, checkTodo }) => (\r\n  <section className=\"main\">\r\n    <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\r\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n\r\n    <ul className=\"todo-list\">\r\n      {items.map(item => \r\n        <Todo\r\n          key={item.id}\r\n          renameTitle={renameTitle}\r\n          item={item}\r\n          deleteTodo={deleteTodo}\r\n          checkTodo={checkTodo}\r\n        />\r\n        )}\r\n    </ul>\r\n  </section>\r\n)\r\n\r\n\r\n\r\n// <li>\r\n//             <div className=\"view\">\r\n//               <input type=\"checkbox\" className=\"toggle\" />\r\n//               <label>asdfghj</label>\r\n//               <button type=\"button\" className=\"destroy\" />\r\n//             </div>\r\n//             <input type=\"text\" className=\"edit\" />\r\n//           </li>\r\n\r\n//           <li className=\"completed\">\r\n//             <div className=\"view\">\r\n//               <input type=\"checkbox\" className=\"toggle\" />\r\n//               <label>qwertyuio</label>\r\n//               <button type=\"button\" className=\"destroy\" />\r\n//             </div>\r\n//             <input type=\"text\" className=\"edit\" />\r\n//           </li>\r\n\r\n//           <li className=\"editing\">\r\n//             <div className=\"view\">\r\n//               <input type=\"checkbox\" className=\"toggle\" />\r\n//               <label>zxcvbnm</label>\r\n//               <button type=\"button\" className=\"destroy\" />\r\n//             </div>\r\n//             <input type=\"text\" className=\"edit\" />\r\n//           </li>\r\n\r\n//           <li>\r\n//             <div className=\"view\">\r\n//               <input type=\"checkbox\" className=\"toggle\" />\r\n//               <label>1234567890</label>\r\n//               <button type=\"button\" className=\"destroy\" />\r\n//             </div>\r\n//             <input type=\"text\" className=\"edit\" />\r\n//           </li>","import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nexport const ControlBar = ({\r\n  itemsCount,\r\n  filterByAll,\r\n  filterByCompleted,\r\n  filterByActive,\r\n  filterType,\r\n  clearCompleted\r\n}) => (\r\n  <footer className=\"footer\">\r\n    <span className=\"todo-count\">\r\n      {itemsCount} items left\r\n    </span>\r\n\r\n    <ul className=\"filters\">\r\n      <li>\r\n        <a\r\n          onClick={filterByAll}\r\n          className={cn({\r\n            'selected' : filterType === 'All',\r\n          })}>\r\n          All\r\n        </a>\r\n      </li>\r\n\r\n      <li>\r\n        <a\r\n          onClick={filterByActive}\r\n          className={cn({\r\n            'selected' : filterType === 'Active',\r\n          })}>\r\n          Active\r\n        </a>\r\n      </li>\r\n\r\n      <li>\r\n        <a\r\n          onClick={filterByCompleted}\r\n          className={cn({\r\n            'selected' : filterType === 'Completed',\r\n          })}>\r\n          Completed\r\n        </a>\r\n      </li>\r\n    </ul>\r\n\r\n    <button\r\n      type=\"button\"\r\n      className=\"clear-completed\"\r\n      onClick={clearCompleted}\r\n    >\r\n      Clear completed\r\n    </button>\r\n  </footer>\r\n)\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextBar } from './components/TextBar';\r\nimport { TodoList } from './components/TodoList';\r\nimport { ControlBar } from './components/ContorlBar';\r\n\r\nfunction App() {\r\n\r\n  const [todos, setTodos] = useState([]);\r\n  const [filterType, setFilterType] = useState('All');\r\n\r\n  const todosHandler = (title) => {\r\n    if (title !== '') {\r\n      setTodos([...todos, makeTodo(title)]);\r\n    }\r\n  }\r\n\r\n  const makeTodo = (title) => (\r\n    {\r\n      title: title,\r\n      id: +new Date(),\r\n      completed: false,\r\n    }\r\n  )\r\n\r\n  useEffect(() => {\r\n    console.log(todos);\r\n  }, [todos])\r\n\r\n  const renameTodo = (todo, newTitle) => {\r\n    todos[findItem(todo)].title = newTitle;\r\n  }\r\n\r\n  const deleteTodo = (todo) => {\r\n    setTodos(todos.filter(item => item.id !== todo.id));\r\n  }\r\n\r\n  const checkTodo = (todo) => {\r\n    const todoStatus = todos[findItem(todo)].completed;\r\n    todos[findItem(todo)].completed = !todoStatus\r\n    setTodos([...todos]);\r\n  }\r\n\r\n  const findItem = (item) => {\r\n    return todos.indexOf(item);\r\n  }\r\n\r\n  const filterTodos = (type) => {\r\n    switch(type) {\r\n      case 'All': return todos;\r\n      case 'Active': return todos.filter(todo => !todo.completed);\r\n      case 'Completed': return todos.filter(todo => todo.completed);\r\n    }\r\n  }\r\n\r\n  const filterByAll = () => {\r\n    setFilterType('All');\r\n  }\r\n\r\n  const filterByActive = () => {\r\n    setFilterType('Active');\r\n  }\r\n\r\n  const filterByCompleted = () => {\r\n    setFilterType('Completed');\r\n  }\r\n\r\n  const clearCompletedTodos = () => {\r\n    setTodos(todos.filter(todo => !todo.completed))\r\n  }\r\n\r\n  return (\r\n    <section className=\"todoapp\">\r\n\r\n      <TextBar senderTodo={todosHandler} />\r\n      {!!todos.length &&\r\n        <TodoList\r\n          items={filterTodos(filterType)}\r\n          renameTitle={renameTodo}\r\n          deleteTodo={deleteTodo}\r\n          checkTodo={checkTodo}\r\n        />\r\n      }\r\n      <ControlBar\r\n        itemsCount={todos.filter(todo => !todo.completed).length}\r\n        filterByActive={filterByActive}\r\n        filterByCompleted={filterByCompleted}\r\n        filterByAll={filterByAll}\r\n        filterType={filterType}\r\n        clearCompleted={clearCompletedTodos}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './styles/index.css';\r\nimport './styles/todo-list.css';\r\nimport './styles/filters.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}